.template 0

function global.protocol__add_content(hook, ctx_name)
  debug('add_content')
  for projectnode.content as c where c.hook = my.hook & (!defined(c.context) | (defined(c.context) & c.context = my.ctx_name))
.   template 1
$(c.:)
.   endtemplate
  endfor
endfunction

function post_open
  my.cached = 0
  if defined(pn.dst)
    my.dst = string__convert_variables(pn.dst, projectnode)
    my.cached = cache__open(my.dst)
  endif
  protocol__add_content('begin', pn.resource_name)
  gsl from pl.src
  return my.cached
endfunction

function post_close(cached)
  cache__close(my.cached)
  if defined(pn.dst) & defined(pn.binary) & pn.binary = "True"
    chmod('+x', global.build_path + my.cached)
  endif
endfunction

function load_post_nodes(projecttree, ctx_logname)
  my.ctx_logname ?= ""

  for my.projecttree. as projectnode
    if class(projectnode) = "XML value"
      next
    endif
    for projectnode.protocol_node as pn
      debug('post load node "$(pn.name:)" (begin)', my.ctx_logname)
      
      for pn.protocol_load as pl where pl.hook = 'post'
        directory.setcwd(get_protocol_resource_path(pn))
        if !file.exists(pl.src)
          error('The filename $(pl.src:) does not exist.')
        endif
        my.cached = post_open()
        directory.setcwd(global.forgeit_path)
      endfor      
    endfor
    
    load_post_nodes(projectnode, my.ctx_logname + name(projectnode) + "][")

    for projectnode.protocol_node as pn
      debug('post load node "$(pn.name:)" (begin)', my.ctx_logname)

      for pn.protocol_load as pl where pl.hook = 'post_end'
        directory.setcwd(get_protocol_resource_path(pn))
        if !file.exists(pl.src)
          error('The filename $(pl.src:) does not exist.')
        endif
        gsl from pl.src
        directory.setcwd(global.forgeit_path)
      endfor
      
      protocol__add_content('end', pn.resource_name)
      
      if defined(my.cached) & my.cached <> 0
        post_close(my.cached)
      endif
    endfor
  endfor
endfunction

function global.protocol__load_post(projecttree, ctx_logname)
  my.ctx_logname ?= ""
  my.projecttree ?= root
  load_post_nodes(my.projecttree, my.ctx_logname)
endfunction

.endtemplate